{ lib, ... }:
# Set cleanHpack to true so that we don't get the traces during evaluation.
# This makes the build more strict, we need the 'extra-source-files', but I'm thinking that's good.
{
  packages =
    let
      ps = [
        "smos"
        "smos-data"
        "smos-data-gen"
        "smos-cursor"
        "smos-cursor-gen"
        "smos-report"
        "smos-report-gen"
        "smos-report-cursor"
        "smos-report-cursor-gen"
        "smos-query"
        "smos-single"
        "smos-scheduler"
        "smos-archive"
        "smos-convert-org"
        "smos-calendar-import"
        "smos-api"
        "smos-api-gen"
        "smos-server"
        "smos-server-gen"
        "smos-client"
        "smos-client-gen"
        "smos-sync-client"
        "smos-sync-client-gen"
        "smos-web-server"
        "smos-docs-site"
        "cursor"
        "cursor-brick"
        "cursor-fuzzy-time"
        "cursor-fuzzy-time-gen"
        "cursor-gen"
        "fuzzy-time"
        "fuzzy-time-gen"
        "genvalidity"
        "genvalidity-bytestring"
        "genvalidity-containers"
        "genvalidity-criterion"
        "genvalidity-hspec"
        "genvalidity-hspec-aeson"
        "genvalidity-hspec-optics"
        "genvalidity-mergeful"
        "genvalidity-path"
        "genvalidity-property"
        "genvalidity-text"
        "genvalidity-time"
        "genvalidity-typed-uuid"
        "genvalidity-unordered-containers"
        "genvalidity-uuid"
        "mergeful"
        "mergeful-persistent"
        "pretty-relative-time"
        "typed-uuid"
        "validity"
        "validity-aeson"
        "validity-bytestring"
        "validity-containers"
        "validity-path"
        "validity-scientific"
        "validity-text"
        "validity-time"
        "validity-unordered-containers"
        "validity-uuid"
        "validity-vector"
      ];
    in
      lib.genAttrs ps (p: { package.cleanHpack = true; });
}
